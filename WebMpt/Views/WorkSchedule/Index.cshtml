@using MPT.PrimitiveType
@using WebMpt.Model.WorkSchedule
@model IEnumerable<ScheduleMonth>

@{
    ViewBag.Title = string.Format("График работы (сменности)");
}

<h1>@ViewBag.Title</h1>

@*
@using (Html.BeginForm("Index", "WorkSchedule", FormMethod.Get))
{
    <fieldset>
        <legend></legend>
        <p>Выберите год</p>
        @Html.DropDownList("Year", ((IEnumerable<SelectListItem>) ViewBag.SelectList).OrderByDescending(x=>x.Text))
        <input type="submit" class="btn" value="Показать"/>
    </fieldset>
}
*@

<script>
    $(document).ready(function(){
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>

@foreach (var month in Model)
{
    <table id="ScheduleMonth" class="table table-sm table-bordered table-condensed">
        <thead>
        <tr>
            <th style="
                @if (month.FirstDay.Year == DateTime.Now.Year && month.FirstDay.Month == DateTime.Now.Month)
                {
                    @Html.Raw("font-size:200%;");
                }" 
                colspan="@Html.Raw(month.Days.Count() + 7)">@Html.DisplayFor(i => month.FullName)</th>
        </tr>
        <tr>
            <th rowspan="2">#</th>
            @foreach (var day in month.Days)
            {
                <th 
                    
                        

                        class="@day[SmenaName.Day].GetCssClass()">
                    <div @if (!string.IsNullOrWhiteSpace(day.ToolTip))
                                        {
                            @Html.Raw("data-toggle=\"tooltip\" data-placement=\"auto\" title = \"" + day.ToolTip + "\"")
                        }>
                        @Html.DisplayFor(i => day.Day)
                    </div>
                </th>
            }
            <th class="RotateText" rowspan="2">@Html.DisplayNameFor(m => m.FirstOrDefault().SmenaMonthPropertieses.FirstOrDefault().Value.WorkDayCount)</th>
            <th class="RotateText" rowspan="2">@Html.DisplayNameFor(m => m.FirstOrDefault().SmenaMonthPropertieses.FirstOrDefault().Value.TotalHours)</th>
            <th class="RotateText" rowspan="2">@Html.DisplayNameFor(m => m.FirstOrDefault().SmenaMonthPropertieses.FirstOrDefault().Value.OverHours)</th>
            <th class="RotateText" rowspan="2">@Html.DisplayNameFor(m => m.FirstOrDefault().SmenaMonthPropertieses.FirstOrDefault().Value.NightHours)</th>
            <th class="RotateText" rowspan="2">@Html.DisplayNameFor(m => m.FirstOrDefault().SmenaMonthPropertieses.FirstOrDefault().Value.HolidayHours)</th>
        </tr>
        <tr>
            @foreach (var day in month.Days)
            {
                <th class="@day[SmenaName.Day].GetCssClass()">@Html.DisplayFor(x => day.DayName)</th>
            }
        </tr>
        </thead>


        <tbody>
        @foreach (var smena in month.SmenaMonthPropertieses.Keys)
        {
            <tr>
                <td class="SmenaName">@Html.Raw(smena.GetDescription())</td>
                @foreach (var day in month.Days)
                {
                    <td class="@day[smena].GetCssClass()">@Html.DisplayFor(x => day[smena].WorkHours)</td>
                }
                <td>@Html.DisplayFor(x => month[smena].WorkDayCount)</td>
                <td>@Html.DisplayFor(x => month[smena].TotalHours)</td>
                <td>@Html.DisplayFor(x => month[smena].OverHours)</td>
                <td>@Html.DisplayFor(x => month[smena].NightHours)</td>
                <td>@Html.DisplayFor(x => month[smena].HolidayHours)</td>
            </tr>
        }
        </tbody>
    </table>
}